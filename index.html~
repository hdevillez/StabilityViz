<!DOCTYPE html>
<meta charset="utf-8">
<head>
<link rel="stylesheet" type"text/css" href="main.css">
</head>

<body style ="background: #B0C4DE">
<div class="menu">
  <select name="graphChoice" id="graphChoice" selectedIndex = "1">
    <option value="data/example1.json">example1</option>
    <option value="data/example2.json">example2</option>
    <option value="data/example3.json">example3</option>
    <option value="data/example4.json">example4</option>
    <option value="data/example5.json">example5</option>
  </select>
  <button onclick="partition()" value = "off" id = "partitionButton">Partition</button>
  <button onclick="findCommunities(1)">Find communities</button>
  <input type="file" id="fileInput" onchange = "loadExternFile()">
  
  <form action="help.html">
    <input type="submit" value="Help">
  </form>
</div>

<div class = "contentBox" style = "float:left">
  <div class ="headerBox" id = "headerGraph"></div> 
  <div class ="graphBox" id = "graphBox"></div>
  <div class ="tailBox" id = "tailGraph">
    
    <label for="time" 
           style="display: inline-block; width: 120px; text-align: center;">
           Time = <span id="time-value">0</span>
    </label>
    <input type="range" min="0" max="150" id="time" autocomplete="off">

    <button onclick ="play()" value = "off" id = "playButton">Play</button>
    <button onclick = "stop()" value = "off" id = "stopButton">Stop</button>

    <p style = "text-align : center;">Speed :
      <button onclick="setSpeedWalk(1)" id = "setSpeedWalkButton1" autocomplete="off" class = "active" >1</button>
      <button onclick="setSpeedWalk(2)" id = "setSpeedWalkButton2" autocomplete="off">2</button>
      <button onclick="setSpeedWalk(3)" id = "setSpeedWalkButton3" autocomplete="off">3</button>
    </p>
  
  </div>


</div>

<div class = "contentBox" style = "float:right"> 
  <div class = "headerBox" id = "headerBarChart"></div> 
  <div class = "graphBox" id = "barChartBox"></div>
  <div class = "tailBox" id = "tailBarChart"></div>
</div>

<script src="lib/d3.min.js"></script>
<script src ="lib/math.js"></script>
<script src ="lib/numeric.min.js"></script>
<script src ="lib/ryb-color-mixer.js"></script>


<script src ="loadJSON.js"></script>
<script src ="graph.js"></script>
<script src ="partition.js"></script>
<script src ="barChart.js"></script>
<script src ="findCommunities.js"></script>
<script src ="util.js"></script>

<script>

var width = 720,
    height = 800;
    
var node = null, link = null, graph = null;

// Create the svg's for the graph and the bar chart
var svgGraph = d3.select("#graphBox").append("svg")
    .attr("width", width)
    .attr("height", height);
    
var svgBarChart = d3.select("#barChartBox").append("svg")
    .attr("width", width)
    .attr("height", height);
       
    
var nbColor = 3;
var nbWalkerTot = 0;
var automaticWalkInterval = null;  
var speedWalk = 1;
var time = 0;

var force = d3.layout.force()
    .charge(-1000)
    .linkDistance(75)
    .size([width, height]);
    
// Load the 3-communities example
loadInternFile("data/example5.json");

// If the slider is moved, change the time and walk if there are walkers.
d3.select("#time").on("input", function () {
  if(nbWalkerTot != 0)
    walk(+d3.select("#time").property("value"));
  else {
    d3.select("#time-value").text(d3.select("#time").property("value"));
    time = +d3.select("#time").property("value");
  }
});

// Load another graph if the user chose another example in the list
d3.select("#graphChoice").on("change", function () {
  loadInternFile(d3.select("#graphChoice").property("value"));
});


// Create the rectangles of color to chose how the nodes are colored
var svgColor = d3.select("#headerVisGraph").append("svg")
    .attr("width", width)
    .attr("height", 60);
    var colorTab = ["#ff0000", "#00ff00", "#0000ff","#ffff00", "#00ffff", "#ff00ff", "#ffffff", "#000000"];
var currColor = "#ff0000";
var interval = (width - 50*colorTab.length)/(colorTab.length+1);

 
svgColor.selectAll(".colorChoice")
    .data(colorTab)
  .enter().append("rect")
  .attr("class", "colorChoice")
  .attr("width", 50)
  .attr("height", 50)
  .attr("fill", function (d, i) { return"#" +(rybColorMixer.rybToRgb(colorTab[i], { hex: true}))})
  .attr("x", function(d, i) { return i*(50 + interval) + interval})
  .attr("y", 5)
  .attr("rx", 15) // rounded corner
  .attr("ry", 15)
  .style("stroke", "#000000")
  .style("stroke-width", function (d, i) { if(i==0) return 3; else return 0;})
  .on("click", function(d, i) {
    currColor = colorTab[i];
    svgColor.selectAll(".colorChoice")
      .style("stroke-width", "0");
    d3.select(this).style("stroke-width", "3");
  });

</script>




